# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: 
  branches:
    include: 
    - master
  paths:
    include:
    - '*'        
    exclude:
    - '**/*.md'

pool:
  vmImage: 'windows-latest'

steps:
  - powershell: |
      Get-ChildItem env: | Where-Object {$_.Name -like 'Build*' -or $_.Name -like 'System*'}
    displayName: Pipeline Variables

  - powershell: |

      Install-Module PSScriptAnalyzer -Scope Currentuser -SkipPublisherCheck -Force
      Install-Module Pester -Scope Currentuser -SkipPublisherCheck -Force
      $TestResults = Invoke-Pester -Path ./Tests -OutputFormat NUnitXml -OutputFile TestResults.xml -PassThru

      if ($TestResults.FailedCount -gt 0) {
          Throw "Failed '$($TestResults.FailedCount)' tests, build failed"
          Exit
      }

    displayName: 'Pester'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/Test*.xml'
  - task: GitVersion@5
    inputs:
      runtime: 'core'
  - powershell: |
      $NewVersion = $env:GitVersion_MajorMinorPatch
      Write-Host "##vso[task.setvariable variable=Build.SemVerId;]$NewVersion"
      git tag $NewVersion
    displayName: Increment Semver

  - powershell: |
      # Import instead of Install because we want to dog food the latest source
      Import-Module ./PSGitChangeLog -Force
      Get-GitChangelog -OutputAs md -latest Build | Set-Content Changelog.md -Encoding utf8
    displayName: Create Changelog

  - task: PowerShell@2
    inputs:
      filePath: 'Publish-ToPSGallery.ps1'
      arguments: '-nuGetApiKey $(PSGallery_PAT) -moduleVersion $(Build.SemVerId)'
    displayName: Publish-ToPSGallery.ps1

  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'Github Repos'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Build.SemVerId)'
      title: 'Version $(Build.SemVerId)'
      releaseNotesFilePath: 'Changelog.md'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
